bird <- c("cardinals", "chickadees", "doves", "goldfinches", "grosbeaks", "house finches", "jays", "juncos", "nuthatches", "purple finches", "siskins", "sparrows", "'titmice", "towhees", "woodpeckers")
bird
bird <- c("cardinals", "chickadees", "doves", "goldfinches", "grosbeaks", "house.finches", "jays", "juncos", "nuthatches", "purple finches", "siskins", "sparrows", "titmice", "towhees", "woodpeckers")
bird
cardinals <- c(3,3,3,1,0,0,0,3,1)
chickadees <-c(3,2,2,0,0,0,2,2,0)
doves <- c(2,1,2,3,3,1,0,2,2)
goldfinches <- c(3,2,3,1,0,3,0,0,0)
grosbeaks <- c(2,2,3,0,0,0,0,1,0)
house.finches <- c(3,2,3,2,0,3,0,1,0)
jays <- c(3,3,3,0,1,0,2,1,2)
juncos <- c(1,1,1,1,0,1,0,0,3)
nuthatches <- c(3,2,2,0,0,0,1,1,0)
purple.finches <- c(3,2,3,1,0,3,0,0,0)
siskins <- c(1,1,3,0,0,3,0,0,1)
sparrows <- c(3,3,3,3,2,0,0,1,2)
titmice <- c(3,2,2,0,0,1,2,1,0)
towhees <- c(3,3,3,1,0,0,1,1,1)
woodpeckers <- c(2,2,3,0,0,0,1,1,1)
# the popularity of each seed is the sum of preferences (high = 3, medium = 2, low = 1)
seed <- c("black oil sunflower", "striped sunflower", "hulled sunflower", "millet white/red", "milo seed", "nyjer seed (thistle)", "shelled peanuts", "safflower seed", "corn products")
?lapply
library(biomaRt) # useMart(), getBM()
install.packages("stringi")
library(biomaRt) # useMart(), getBM()
install.packages("plyr")
setwd("~/stickleback-methylation/src")
# after performing dataset annotation, just load the file that already has annotations
RS1.fil <- read.csv(gzfile("../data_annotation/RS1_features_dup.csv.gz"))
View(RS1.fil)
# load the data
RS1 <- read.table(gzfile("../data_methylation/RS1.trimmed_cutadapt_bismark_bt2.bismark.cov.gz"), col.names = c("chr", "start", "end", "pct", "numCs", "numTs"))
# create coverage column and filter by coverage
RS1$coverage <- RS1$numCs + RS1$numTs
RS1.fil <- RS1[RS1$coverage >= 10, ]
RS1.fil <- RS1.fil[RS1.fil$coverage <= quantile(RS1$coverage, .999), ] # making sure that taking out the lower ones doesn't interfere w/ 99.9th percentile calculation here
library(genomation)
library(methylKit)
library(plyr)
RS1.gr <- as(RS1.fil, "GRanges") # GRanges object needed for findOverlap()
RS1.fil$region <- factor("intergenic_nonpromoter", levels=c("intergenic_nonpromoter", "TSSes", "introns", "exons", "promoters")) # default region; later, sites in other regions will have this column overwritten
# import transcript IDs and gene IDs table
t2gIDs <- read.csv(gzfile("../data_annotation/t2gIDs.csv.gz"))
colnames(t2gIDs) <- c("ensembl_transcript_id", "ensembl_gene_id")
bed <- read.table("../data_annotation/ensemblGenes.gasAcu1.bed")
bed <- bed[,1:4]
colnames(bed) <- c("seqname", "start", "end", "ensembl_transcript_id")
bed$ensembl_transcript_id <- sub('\\..', '', bed$ensembl_transcript_id)
bed <- join(bed, t2gIDs, by="ensembl_transcript_id")
bed.gr <- as(bed, "GRanges")
geneOverlaps <- as.data.frame(findOverlaps(RS1.gr, bed.gr))
RS1.fil[geneOverlaps$queryHits, "ensembl_gene_id"] <- as.character(bed.gr[geneOverlaps$subjectHits,]$ensembl_gene_id)
RS1.fil[geneOverlaps$queryHits, "ensembl_transcript_id"] <- as.character(bed.gr[geneOverlaps$subjectHits,]$ensembl_transcript_id)
View(RS1.fil)
mean(width(ranges(features$exons[features$exons$score==1,]))) # average length of first exon is 208.49 bp, so we'll include first exons in promoters
features <- readTranscriptFeatures("../data_annotation/ensemblGenes.gasAcu1.bed", up.flank=1000, down.flank=200, unique.prom=FALSE)
# order matters; promoters overwrite exons, which overwrite TSSes, etc.
feats <- c("introns", "TSSes", "exons", "promoters")
# create columns to be populated
RS1.fil[ , c("feature_start", "feature_end", "feature_score")] <- NA
for (i in 1:length(feats)) {
feature.gr <- as(features[[feats[i]]], "GRanges")
overlaps <- as.data.frame(findOverlaps(RS1.gr, feature.gr))
# ensembl_transcript_id, ensembl_gene_id
feature.df <- as.data.frame(features[[feats[i]]])
colnames(feature.df)[7] <- "ensembl_transcript_id"
feature.df$ensembl_transcript_id <- sub('\\..', '', feature.df$ensembl_transcript_id) # remove version number of transcript
feature.df <- join(feature.df, t2gIDs, by="ensembl_transcript_id")
RS1.fil[overlaps$queryHits, "region"] <- feats[i]
# feature_start, feature_end, ensembl_transcript_id, ensembl_gene_id
RS1.fil[overlaps$queryHits, "feature_start"] <- start(ranges(feature.gr[overlaps$subjectHits, ]))
RS1.fil[overlaps$queryHits, "feature_end"] <- end(ranges(feature.gr[overlaps$subjectHits, ]))
RS1.fil[overlaps$queryHits, "ensembl_gene_id"] <- as.character(feature.df[overlaps$subjectHits, "ensembl_gene_id"])
RS1.fil[overlaps$queryHits, "ensembl_transcript_id"] <- feature.df[overlaps$subjectHits, "ensembl_transcript_id"]
# feature_score
RS1.fil[overlaps$queryHits, "feature_score"] <- feature.gr[overlaps$subjectHits, ]$score
}
featureInfo <- aggregate(pct ~ feature_start + region + chr, RS1.fil, mean)
colnames(featureInfo)[4] <- "feature_pct_meth"
featureInfo <- join(featureInfo, aggregate(pct ~ feature_start + region + chr, RS1.fil, length), by=c("feature_start", "region", "chr"))
colnames(featureInfo)[5] <- "feature_count_sites"
RS1.fil <- join(RS1.fil, featureInfo, by=c("feature_start", "region", "chr"))
head(aggregate(feature_pct_meth ~ feature_start + ensembl_gene_id, RS1.fil, unique))
head(aggregate(feature_pct_meth ~ feature_start + ensembl_gene_id, RS1.fil[RS1.fil$region=="promoter",], unique))
head(aggregate(feature_pct_meth ~ feature_start + ensembl_gene_id, RS1.fil[RS1.fil$region=="promoters",], unique))
head(duplicated(RS1.fil[RS1.fil$region=="promoters",]$ensembl_gene_id))
head(RS1.fil[RS1.fil$region=="promoters",]$ensembl_gene_id)
duplicated(aggregate(feature_pct_meth ~ feature_start + ensembl_gene_id, RS1.fil[RS1.fil$region=="promoters",], unique)$ensembl_gene_id)
sum(duplicated(aggregate(feature_pct_meth ~ feature_start + ensembl_gene_id, RS1.fil[RS1.fil$region=="promoters",], unique)$ensembl_gene_id))
prom <- aggregate(feature_pct_meth ~ feature_start + ensembl_gene_id, RS1.fil[RS1.fil$region=="promoters", ], unique)
View(prom)
head(prom[duplicated(prom$ensembl_gene_id),])
prom[duplicated(prom$ensembl_gene_id),]
length(prom[duplicated(prom$ensembl_gene_id),])
length(duplicated(prom$ensembl_gene_id))
sum(duplicated(prom$ensembl_gene_id))
colnames(prom)[3] <- "promoter_methylation"
prom <- aggregate(pct ~ feature_start + ensembl_gene_id, RS1.fil[RS1.fil$region=="promoters", ], unique)
sum(duplicated(prom$ensembl_gene_id)) # 988
sum(duplicated(prom$ensembl_gene_id)) # 988
colnames(prom)[3] <- "promoter_methylation"
gene <- aggregate(pct ~ ensembl_gene_id, RS1.fil, mean)
View(gene)
colnames(gene)[2] <- "gene_methylation"
prom[,1] <- NULL
meth <- join(prom, gene, by="ensembl_gene_id")
View(meth)
prom <- aggregate(pct ~ feature_start + ensembl_gene_id, RS1.fil[RS1.fil$region=="promoters", ], mean)
sum(duplicated(prom$ensembl_gene_id)) # 988
colnames(prom)[3] <- "promoter_methylation"
prom[,1] <- NULL
gene <- aggregate(pct ~ ensembl_gene_id, RS1.fil, mean)
colnames(gene)[2] <- "gene_methylation"
meth <- join(prom, gene, by="ensembl_gene_id")
View(meth)
plot(meth$promoter_methylation, meth$gene_methylation)
write.csv(meth, "../data_annotation/RS1.meth.prom.gene.csv")
?commandArgs
